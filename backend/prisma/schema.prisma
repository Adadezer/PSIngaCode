// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int             @id @default(autoincrement())
  userName      String          @unique @db.VarChar(250)
  password      String          @db.VarChar(512)
  createdAt     DateTime        @default(now()) @db.Timestamp(3)
  updatedAt     DateTime        @default(now()) @db.Timestamp(3)
  deletedAt     DateTime        @default(now()) @db.Timestamp(3)
  Collaborators Collaborators[]
}

model Collaborators {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(250)
  createdAt    DateTime       @default(now()) @db.Timestamp(3)
  updatedAt    DateTime       @default(now()) @db.Timestamp(3)
  deletedAt    DateTime       @default(now()) @db.Timestamp(3)
  user         Users          @relation(fields: [userId], references: [id])
  userId       Int
  TimeTrackers TimeTrackers[]
}

model TimeTrackers {
  id             Int           @id @default(autoincrement())
  startDate      DateTime      @default(now()) @db.Timestamp(3)
  endDate        DateTime      @default(now()) @db.Timestamp(3)
  timeZoneId     String        @db.VarChar(200)
  taskId         Int
  createdAt      DateTime      @default(now()) @db.Timestamp(3)
  updatedAt      DateTime      @default(now()) @db.Timestamp(3)
  deletedAt      DateTime      @default(now()) @db.Timestamp(3)
  collaborator   Collaborators @relation(fields: [collaboratorId], references: [id])
  collaboratorId Int
}

model Tasks {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(250)
  description String   @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.Timestamp(3)
  updatedAt   DateTime @default(now()) @db.Timestamp(3)
  deletedAt   DateTime @default(now()) @db.Timestamp(3)
  project     Projects @relation(fields: [projectID], references: [id])
  projectID   Int
}

model Projects {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(250)
  createdAt DateTime @default(now()) @db.Timestamp(3)
  updatedAt DateTime @default(now()) @db.Timestamp(3)
  deletedAt DateTime @default(now()) @db.Timestamp(3)
  Tasks     Tasks[]
}
